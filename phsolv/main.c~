#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>
#include <inttypes.h>
#include <string.h>

// const char atoms_list[][3] = {"H", "He", "Li", "Be", "B", "C", "N", "O", "F", "Ne", "Na", "Mg", "Al", "Si", "P", "S", "Cl", "Ar", "K", "Ca", "Sc", "Ti", "V", "Cr", "Mn", "Fe", "Co", "Ni", "Cu", "Zn", "Ga", "Ge", "As", "Se", "Br", "Kr", "Rb", "Sr", "Y", "Zr", "Nb", "Mo", "Tc", "Ru", "Rh", "Pd", "Ag", "Cd", "In", "Sn", "Sb", "Te", "I", "Xe", "Cs", "Ba", "La", "Ce", "Pr", "Nd", "Pm", "Sm", "Eu", "Gd", "Tb", "Dy", "Ho", "Er", "Tm", "Yb", "Lu", "Hf", "Ta", "W", "Re", "Os", "Ir", "Pt", "Au", "Hg", "Tl", "Pb", "Bi", "Po", "At", "Rn", "Fr", "Ra", "Ac", "Th", "Pa", "U", "Np", "Pu", "Am", "Cm", "Bk", "Cf", "Es", "Fm", "Md", "No", "Lr", "Rf", "Db", "Sg", "Bh", "Hs", "Mt", "Ds", "Rg"};

/*
Ta,
Tb,
Tc,
Te,
Th,
Ti,
Tl,
Tm,

0b00000000000000000000000000000000
	abcdefghijklmnopqrstuvwxyz

*/

const uint32_t single_letter_atom_list = 0b01100101101001110010111010000000;

const uint32_t atoms_list[26] = {
		/* */ /*abcdefghijklmnopqrstuvwxyz*/
		/*A*/ 0b00100010000110000111100000000000,
		/*B*/ 0b10001001101000000100000000000000,
		/*C*/ 0b10011100000110100110100000000000,
		/*D*/ 0b00010000000000000010000010000000,
		/*E*/ 0b00000000000000000110100000000000,
		/*F*/ 0b00001000000010000100000000000000,
		/*G*/ 0b10011000000000000000000000000000,
		/*H*/ 0b00001110000000100010000000000000,
		/*I*/ 0b00000000000001000100000000000000,
		/*J*/ 0b00000000000000000000000000000000,
		/*K*/ 0b00000000000000000100000000000000,
		/*L*/ 0b10000000100000000100100000000000,
		/*M*/ 0b00010010000001100001000000000000,
		/*N*/ 0b11001000100000110000000000000000,
		/*O*/ 0b00000000000000000010000000000000,
		/*P*/ 0b11010000000010100101100000000000,
		/*Q*/,
		/*R*/ 0b11001111000001000000100000000000,
		/*S*/ 0b01101010100011000100000000000000,
		/*T*/ 0b11101001100110000000000000000000,
		/*U*/
		/*V*/
		/*W*/
		/*X*/ 0b00001000000000000000000000000000,
		/*Y*/ 0b01000000000000000000000000000000,
		/*Z*/ 0b00000000000001000100000000000000,
};

typedef struct
{
	char type[2];
	uint8_t num;
} atom;

#define MAX_MOLECULE_SIZE 64
#define MOLECULE_MAX_ATOM_COUNT 32
typedef struct
{
	char name[MAX_MOLECULE_SIZE];
	atom type[MOLECULE_MAX_ATOM_COUNT];
	uint8_t a_count; // the number of atoms in the molecule
	int8_t tot_charge;
	uint16_t coeff;
} molecule;

#define MAX_EQ_SIZE 32
typedef struct
{
	molecule react[MAX_EQ_SIZE],
			prod[MAX_EQ_SIZE];
} equa;

#define STRING_X(x) #x
#define STRINGIFY(x) STRING_X(x)

molecule parse_molecule(const char *restrict const stream);

int main(int argc, char **argv)
{
	(void)argc, argv;

	printf("please write your unbalanced chemical equasion below :\n");

	uint8_t react = 1; // are the comps getting read reagents
	for (uint8_t i = 0;; ++i)
	{
		char buff[MAX_MOLECULE_SIZE];
		fscanf(stdin, "%" STRINGIFY(MAX_MOLECULE_SIZE) "s", buff);
		parse_molecule(buff);
		putchar('\n');
	}

	return 0;
}

molecule parse_molecule(const char stream[MAX_MOLECULE_SIZE])
{
	molecule mol;

	for (uint16_t i = 0; stream[i] != 0; ++i)
	{
		putchar(stream[i]);
	}

	return mol;
}